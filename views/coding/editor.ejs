<% include ../partial/header%>




<script type="text/javascript" src="/js/skulpt.min.js"></script>
<!-- masonry  -->
<script type="text/javascript" src="/js/skulpt-stdlib.js"></script>


<script type="text/javascript">
    // output functions are configurable.  This one just appends some text
    // to a pre element.
    function outf(text) {
        var mypre = document.getElementById("output");
        mypre.innerHTML = mypre.innerHTML + text;
    }
    function builtinRead(x) {
        if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
            throw "File not found: '" + x + "'";
        return Sk.builtinFiles["files"][x];
    }
    // Here's everything you need to run a python program in skulpt
    // grab the code from your textarea
    // get a reference to your pre element for output
    // configure the output function
    // call Sk.importMainWithBody()
    function runit() {
        // var prog = document.getElementById("yourcode").value;

        var prog = editor.getValue();
        var mypre = document.getElementById("output");
        mypre.innerHTML = '';
        Sk.pre = "output";
        Sk.configure({output:outf, read:builtinRead});
        (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';
        var myPromise = Sk.misceval.asyncToPromise(function() {
            return Sk.importMainWithBody("<stdin>", false, prog, true);
        });
        myPromise.then(function(mod) {
                console.log('success');
            },
            function(err) {
                console.log(err.toString());
            });
    }
</script>


    <!-- Content -->
    <div class="page-content bg-white">

        <!-- Breadcrumb row -->
        <div class="breadcrumb-row">
            <div class="container">
                <ul class="list-inline">
                    <li><a href="#">Home</a></li>
                    <li>Coding</li>
                </ul>
            </div>
        </div>
        <!-- Breadcrumb row END -->
        <!-- contact area -->
        <div class="content-area" style="margin: 0 0 0 0">
            <!-- Career -->
        <div class = "container">
                <div class="row">

                <div class="col-md-3">
                    <div class="panel panel-default" style="height:600px">
                        <div class="panel-heading">Problem Statement</div>
                        <div class="panel-body">
                            Panel content
                        </div>
                    </div>
                </div>


                    <div class="col-md-6">
                    <div id="editor" style="height:600px">

                    </div>
                        <br>
                        <form>
                        <button id="run" onclick="runit()" class="site-button orange radius-xl  m-r15" type="button">Run Code</button>
                        <button id="submit" class="site-button orange radius-xl  m-r15" type="button">Submit</button>
                        </form>

                    </div>




                    <div class="col-md-3">


                        <div class="panel panel-default" style="height:300px">
                            <div class="panel-heading">Result</div>
                            <div class="panel-body">

                                <pre id="output" ></pre>
                                <!-- If you want turtle graphics include a canvas -->





                                <textarea id="yourcode" style="display: none">
def Permute(queens, row):
    for i in range(8):
        queens[row] = i
        if Fine(queens, row):
            if row == 7:
                print(queens)
                globals()["solutions"] = globals()["solutions"] + 1
            else:
                Permute(queens, row+1)

def Fine(queens, row):
    c = 0
    derga = True
    for i in range(row):
        c, cur, oth = c+1, queens[row], queens[row-i-1]
        if (cur == oth) or (cur-c == oth) or (cur+c == oth):
            derga = False
            break
    return(derga)

globals()["solutions"] = 0
queens = [20, 20, 20, 20, 20, 20, 20, 20]
for i in range(8):
    queens[0] = i
    Permute(queens, 1)
print(solutions)

print "Hello World"


<%=code.code1%>
<%=code.code2%>

</textarea><br />




                            </div>
                        </div>


                        <div class="panel panel-default" style="height:300px">
                            <div class="panel-heading">Canvas</div>



                                <!-- If you want turtle graphics include a canvas -->
                                <div id="mycanvas" style="width: 200px"></div>

                        </div>



                    </div>



                </div>
        </div>
            <!-- Container END -->
        </div>
        <!-- contact area END -->
    </div>
    <!-- Content END-->




<!-- JavaScript  files ========================================= -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.9/ace.js" type="text/javascript" charset="utf-8"></script>

<script>


    var editor = ace.edit("editor");


    editor.setTheme("ace/theme/monokai");
    editor.setFontSize(14);
    editor.session.setMode("ace/mode/python");
    var prog = document.getElementById("yourcode").value;

    editor.getSession().setValue(prog);


</script>



<!--

<script>


    $('#submit').on('click', function() {
        var codeF = editor.getValue() ;
        console.log(typeof codeF)

        var json = {
            code: codeF
        };
        console.log(json);

        $.post("/code/problem/submit", json, function(data, error, xhr) {

        });

    });


</script>




<script>


    $('#submit').on('click', function() {
        var code1 = editor.getValue() ;


        var cobject = {
            code1: code1,
            code2: "<%=code.code2%>"
        };
        console.log(cobject);

        $.post("/code/problem/build_and_run", cobject, function(data, error, xhr) {

        });

    });


</script>


-->


</body>
</html>